# Attack narrative

The engagement began with an external reconnaissance of publicly accessible systems. During this phase, the external host prod-serv (10.200.180.200) was identified as running a vulnerable version of Webmin. Exploitation of CVE-2019-15107 granted the attacker a remote root shell on prod-serv, providing a strong foothold into the target environment.
Once access was established, the attack leveraged an SSH private key found in the default location (~/.ssh/id_rsa) and an open SSH port (22) on prod-serv to enable subnet-wide tunneling using sshuttle. With this pivot, the attacker transferred post-exploitation tools (chisel, nmap, socat) to the /tmp directory and began internal reconnaissance.
Scanning from prod-serv revealed two internal systems:
•	10.200.180.150 (git-serv)
•	10.200.180.100 (wreath-pc)
Port 80 and 3389 were open on git-serv. Accessing its web interface revealed a /gitstack login portal. This was vulnerable to a known exploit (EBD-43777), which the attacker used to gain a reverse shell as NT AUTHORITY.
Using this access, the attacker created a local user saptarshi on git-serv, assigning Administrator and Remote Management User privileges to establish persistence. Remote shells were obtained using both WinRM and RDP, allowing local tool sharing (including mimikatz).
With mimikatz, the attacker dumped NTLM hashes including that of the local Administrator. The hash was reused to gain a second privileged shell via evil-winRM. Post-exploitation continued with the transfer of chisel.exe and PowerShell Empire modules for advanced tooling. The attacker then conducted internal port scanning using Invoke-PortScan, identifying services on wreath-pc.
Despite wreath-pc being network-restricted, a double pivot was established via prod-serv → git-serv → wreath-pc, allowing access to port 80 on wreath-pc. A Git repository hosted there exposed a /resources endpoint that accepted image uploads.
Further analysis revealed the upload functionality only validated the file extension after the first dot. The attacker bypassed this filter by uploading a malicious file named image.jpeg.php containing a PHP backdoor embedded in the image metadata. This enabled remote code execution through a crafted GET parameter wreath, allowing execution of arbitrary Windows commands.
Using the backdoor, the attacker issued commands like systeminfo and transferred netcat.exe, eventually establishing a reverse shell as user Thomas. Mimikatz had earlier revealed Thomas’s weak password, which was cracked to enable access to the restricted repository.
Privilege escalation was achieved through identification of an unquoted service path vulnerability in System Explorer. The associated service directory was writable, allowing the attacker to drop a malicious executable (reverse shell wrapper) compiled from C# and transferred via SMB. Restarting the service triggered the exploit, yielding a reverse shell as SYSTEM.
With SYSTEM privileges on wreath-pc, the attacker exfiltrated the SAM and SYSTEM registry hives via the same SMB share. These files were later used on the attack box with secretsdump.py to dump all local user and Administrator hashes, completing the full compromise of the internal system.
